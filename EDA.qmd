---
title: "EDA_Practice"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

## Task 1: Read in Data and Modify

*Part 1*

```{r}
d1=read.table("student-mat.csv",sep=";",header=TRUE)
d2=read.table("student-por.csv",sep=";",header=TRUE)

d3=merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
print(nrow(d3)) # 382 students
```

*Part 2*

```{r}
d1 <- read_delim("student-mat.csv", delim = ";", show_col_types = FALSE)
d2 <- read_delim("student-por.csv", delim = ";", show_col_types = FALSE)

d3 <- inner_join(d1, d2, by = c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
```

**The issue is detected on Row 79. It duplicated columns (G1, G2, G3, etc...) and add a suffix with what data set it came from (x or y). This is happening because it I believe some of the students have overlapping key variables so it a many-to-many join and not a one to one join.**

*Part 3: Use an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use his form of the combined data in further exercises.*

```{r}
d1 <- read_delim("student-mat.csv", delim = ";", show_col_types = FALSE)
d2 <- read_delim("student-por.csv", delim = ";", show_col_types = FALSE)

d3 <- inner_join(d1, d2, by = c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob", "reason", "guardian", "traveltime", "studytime", "failures", "schoolsup", "famsup", "activities", "nursery", "higher", "internet", "romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health"))
```

*Part 4: Next, for the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble (use the same four variables in
each). Use the mutate() function to accomplish this.*

```{r}
d1 <- d1 |> 
  mutate(Pstatus = as.factor(Pstatus),
         famsize = as.factor(famsize),
         Mjob = as.factor(Mjob),
         Fjob = as.factor(Fjob))

d2 <- d2 |> 
  mutate(Pstatus = as.factor(Pstatus),
         famsize = as.factor(famsize),
         Mjob = as.factor(Mjob),
         Fjob = as.factor(Fjob))

d3 <- d3 |> 
  mutate(Pstatus = as.factor(Pstatus),
         famsize = as.factor(famsize),
         Mjob = as.factor(Mjob),
         Fjob = as.factor(Fjob))




```

## Running Code
